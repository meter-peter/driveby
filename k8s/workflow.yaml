apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: api-testing-
spec:
  entrypoint: api-testing
  arguments:
    parameters:
    - name: service-name
      value: "my-service"
    - name: service-version
      value: "v1.0.0"
    - name: openapi-url
      value: "http://my-service:8080/swagger/doc.json"

  templates:
  - name: api-testing
    steps:
    - - name: run-tests
        template: run-api-tests
        arguments:
          parameters:
          - name: service-name
            value: "{{workflow.parameters.service-name}}"
          - name: service-version
            value: "{{workflow.parameters.service-version}}"
          - name: openapi-url
            value: "{{workflow.parameters.openapi-url}}"

  - name: run-api-tests
    inputs:
      parameters:
      - name: service-name
      - name: service-version
      - name: openapi-url
    script:
      image: curlimages/curl:latest
      command: [ sh ]
      source: |
        # Fetch OpenAPI spec
        OPENAPI_SPEC=$(curl -s "{{inputs.parameters.openapi-url}}")

        # Prepare test request
        TEST_REQUEST=$(cat <<EOF
        {
          "openapi_spec": $OPENAPI_SPEC,
          "load_test_config": {
            "request_rate": 10,
            "test_duration": "30s",
            "request_timeout": "5s"
          },
          "thresholds": {
            "documentation": {
              "min_compliance_score": 95.0,
              "max_missing_examples": 0
            },
            "integration": {
              "min_pass_rate": 0.95
            },
            "load_test": {
              "min_success_rate": 99.0,
              "max_latency_p95": "500ms",
              "max_error_rate": 1.0
            }
          }
        }
        EOF
        )

        # Run tests
        TEST_RESULT=$(curl -s -X POST \
          -H "Content-Type: application/json" \
          -d "$TEST_REQUEST" \
          http://api-testing-service/api/v1/tests)

        # Extract test ID
        TEST_ID=$(echo $TEST_RESULT | jq -r '.test_id')

        # Wait for results
        sleep 5

        # Get final results
        FINAL_RESULT=$(curl -s http://api-testing-service/api/v1/tests/$TEST_ID)

        # Check if all tests passed
        DOC_PASSED=$(echo $FINAL_RESULT | jq -r '.results.documentation.passed')
        INT_PASSED=$(echo $FINAL_RESULT | jq -r '.results.integration.passed')
        LOAD_PASSED=$(echo $FINAL_RESULT | jq -r '.results.load_test.passed')

        if [ "$DOC_PASSED" = "true" ] && [ "$INT_PASSED" = "true" ] && [ "$LOAD_PASSED" = "true" ]; then
          echo "All tests passed"
          exit 0
        else
          echo "Tests failed"
          echo "Documentation: $DOC_PASSED"
          echo "Integration: $INT_PASSED"
          echo "Load Test: $LOAD_PASSED"
          exit 1
        fi 
